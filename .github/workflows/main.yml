# This is a basic workflow to help you get started with Actions

name: CI

.iac-build: &iac-build
    tags:
        - iac-build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events for the main, devel branch
  push:
    # branches: [ * ]
  pull_request:
    branches: [ main, devel ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job manages the dependencies and builds the repositories
  build-repo:
    <<: *iac-build
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up the runner for compiling the repository
      - name: Build setup
        run: |
          sudo apt-get update -qy
          sudo apt-get install cmake plantuml graphviz doxygen -qy
          pip3 install gcovr

      # Compiles the repository
      - name: Build repository
        run: |
          ./build.sh
          ./build.sh --sim --tests --docs 
          touch build/nyan.md
          
      # Uploads repo artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./build
          retention-days: 1

          
  # This job tests all executables that are compiled
  test-repo:
    <<: *iac-build
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build-repo
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Checks-out artifacts
      - name: Download needed artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build

      # Set up the runner for compiling the repository
      - name: test build dirs
        run: |
          ls -lah build

    
  # This job calls the unit test suite and generates a test coverage report
  generate-coverage-report:
    <<: *iac-build
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build-repo
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Set up the runner for compiling the repository
      - name: Build setup
        run: |
          sudo apt-get update -qy
          sudo apt-get install cmake plantuml graphviz doxygen -qy
          pip3 install gcovr
          
      # Generates a coverage report
      - name: Generate coverage report
        run: |
          ./build.sh --coverage --docs
          mkdir doc/html/coverage/
          touch doc/html/coverage/nyan.md
          
      # Uploads coverage report artifact
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./doc/html/coverage
          retention-days: 90


